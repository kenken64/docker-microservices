version: '3.5' # specify docker-compose version

# Define the services/containers to be run
services:
  mysql: # mysql image
    build: 
      context: ./database
      dockerfile: Dockerfile.mysql # specify image to build container from
    container_name: "mysql"
    ports:
      - "3306:3306" # specify port forewarding
      - "33060:33060"
    networks:
      - some-net # default network

  mongodb: # mongo db 
    container_name: "mongodb"   
    build: 
      context: ./database
      dockerfile: Dockerfile.mongodb # specify image to build container from
    ports:
      - "27018:27017" # specify port forewarding
    networks:
      - some-net # default network

  backendsvr: # node js express backend
    container_name: "backendsvr"
    build: 
        context: ./server
        dockerfile: Dockerfile.backend # specify image to build container from
    ports:
      - "8080:8080" #specify ports forewarding
    depends_on:
      - mysql
    restart: always
    links:
      - mysql # link this service to the database service
    networks:
      - some-net # default network  

  backendsvr2: # spring boot java backend
    container_name: "backendsvr2"
    build: 
        context: ./server2
        dockerfile: Dockerfile.backend2 # specify image to build container from
    ports:
      - "8081:8081" #specify ports forewarding
    depends_on:
      - mysql
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/testdb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root1234  
    restart: always
    links:
      - mysql # link this service to the database service
    networks:
      - some-net # default network
  
  backendsvr3: # python flask backend
    container_name: "backendsvr3"
    build: 
        context: ./server3
        dockerfile: Dockerfile.backend3 # specify image to build container from
    ports:
      - "5000:5000" #specify ports forewarding
    depends_on:
      - mongodb
    restart: always
    links:
      - mongodb # link this service to the database service
    networks:
      - some-net # default network    
  
  angular: # name of the first service
    container_name: "angular"
    build: 
        context: ./angular-app
        dockerfile: Dockerfile.frontend # specify image to build container from
    ports:
      - "8082:80" # specify port forewarding
    depends_on:
      - backendsvr
      - backendsvr2
      - backendsvr3  
    links:
      - backendsvr # link this service to the database service
      - backendsvr2
      - backendsvr3
    networks:
      - some-net # default network

networks:
  some-net:
    driver: bridge
    
